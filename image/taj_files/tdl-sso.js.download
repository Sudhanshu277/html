const getParameterByName = (name, url) => {
  if (!url) url = window.location.href;
  name = name.replace(/[\[\]]/g, '\\$&');
  const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
    results = regex.exec(url);
  if (!results) return null;
  if (!results[2]) return '';
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
};

const selectEnv = (href) => {
  if (href.includes('localhost') || href.includes('0.0.0.0'))
    return 'http://localhost:8080/api/v1';
  if (href.includes('dev')) return 'https://dapi.tatadigital.com/api/v1/sso';
  if (href.includes('sit')) return 'https://sapi.tatadigital.com/api/v1/sso';
  if (href.includes('cug')) return 'https://ppapi.tatadigital.com/api/v1/sso';
  if (href.includes('pt')) return 'https://pfapi.tatadigital.com/api/v1/sso';
  if (href.includes('accounts')) return 'https://api.tatadigital.com/api/v1/sso';
  return 'https://dapi.tatadigital.com/api/v1/sso';
};

const createSession = async (accessTokenR, refreshTokenR) => {
  const response = await fetch(
    selectEnv(window.location.href) + '/create-session',
    {
      mode: 'cors',
      method: 'POST',
      body: JSON.stringify({
        accessToken: accessTokenR,
        refreshToken: refreshTokenR,
        clientId: 'TCP-WEB-APP',
      }),
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        clientId: 'TCP-WEB-APP',
      },
    }
  );
  const { accessToken, refreshToken } = await response.json(); // extract JSON from the http response
  if (accessToken && refreshToken) {
    localStorage.setItem('access_token', accessToken);
    localStorage.setItem('refresh_token', refreshToken);
    window.location.reload()
  }
};

const accessToken = getParameterByName('accessToken');
const refreshToken = getParameterByName('refreshToken');
const access_token = localStorage.getItem('access_token');

if (accessToken && refreshToken) {
  if (!localStorage.getItem('access_token') && !localStorage.getItem('refresh_token')) {
    createSession(accessToken, refreshToken).then(() =>
      console.log('Session created')
    );
  }
}

const selectScriptEnv = (script) => {
  const href = script.src;
  if (href.includes('localhost') || href.includes('0.0.0.0'))
    return 'http://localhost:8081';
  if (href.includes('dev')) return 'https://dev-account.tatadigital.com';
  if (href.includes('sit')) return 'https://sit-account.tatadigital.com';
  return 'https://dev-account.tatadigital.com';
};
const ssoOriginUrl = selectScriptEnv(document.currentScript);

function prepareFrame(clientId) {
  const ifrm = document.createElement('iframe');
  ifrm.setAttribute(
    'src',
    ssoOriginUrl +
    '#check-session?clientId=' +
    clientId +
    '&redirectURL=' +
    window.location.href
  );
  ifrm.setAttribute('id', 'check-session');
  ifrm.style.display = 'none';
  if (document.body) document.body.appendChild(ifrm);
}

window.addEventListener('message', (event) => {
  if (event.origin.startsWith(ssoOriginUrl)) {
    try {
      getTdlSsoToken(event.data);
    } catch (e) {
      console.log(
        'TDL SSO [Error Log]: Callback getTdlSsoToken({ authCode, codeVerifier }) not found'
      );
    }
  } else return;
});

const tdlSsoAuth = {
  signOut: async (logoutAccessToken) =>
    console.log(
      'TDL SSO [Error Log]: Please add <meta name="tdl-sso-client_id" content="CLIENT-ID"> in html head'
    ),
};
const clientTag = document.head.querySelector(
  '[name=tdl-sso-client_id][content]'
);
if (clientTag) {
  const clientId = clientTag.content;
  if (clientId) prepareFrame(clientId);
  else
    console.log(
      'TDL SSO [Error Log]: Please add <meta name="tdl-sso-client_id" content="CLIENT-ID"> in html head'
    );
  if (clientId) {
    tdlSsoAuth.signOut = async (logoutAccessToken) => {
      const response = await fetch(
        selectEnv(window.location.href) + '/signout',
        {
          mode: 'cors',
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Origin': '*',
            client_id: clientId,
            Authorization: `Bearer ${logoutAccessToken}`,
          },
        }
      );
      if (response.status === 200) location.reload();
    };
  }

  let loginButton = document.getElementsByClassName('tata-signin2');
  if (loginButton[0] && clientId) {
    loginButton[0].innerText = 'Tata Digital Login';
    loginButton[0].style.padding = '8px';
    loginButton[0].style.display = 'inline-block';
    loginButton[0].style.color = 'white';
    loginButton[0].style.backgroundColor = 'black';
    loginButton[0].onclick = () => {
      window.location.href =
        ssoOriginUrl +
        '?clientId=' +
        clientId +
        '&redirectURL=' +
        window.location.href;
    };
  }
} else
  console.log(
    'TDL SSO [Error Log]: Please add <meta name="tdl-sso-client_id" content="CLIENT-ID"> in html head'
  );

/** Login button */
// <div class="tata-signin2" data-onsuccess="onSignIn"></div>
//This comment add for new build
